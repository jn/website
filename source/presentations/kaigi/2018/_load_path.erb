<div>
  <h2>Testing LOAD_PATH is not altered</h2>
  <p>In some applications boot time is one of the most important aspects because this allows the application to respond instantaneously to requests.</p>
  <p>To make sure that developers do not have to spend their time always remembering this, and hoping not to make a mistake, let's boot the app in a test and see what has been loaded</p>

  <h4>bin/support/load_dev.rb</h4>
  <pre>
    <code>
  #!/usr/bin/ruby --disable-gems
  # By disabling gems, we reduce the load path significantly as Bundler and Ruby
  # won't pollute the LOAD_PATH with unnecessary libraries

  # Load a known and specific library
  lib_path = File.expand_path("../../../lib", __FILE__)
  $LOAD_PATH.unshift(lib_path) unless $LOAD_PATH.include?(lib_path)

  # ... Some setup code ...

  # Require the application
  require 'dev'

  # A special feature that will print all the LOADED_FEATURES (required files)
  # if PRINT_LOADED_FEATURES env var is set. This lets us test more easily.
  if ENV['PRINT_LOADED_FEATURES']
    puts $LOADED_FEATURES
  end
    </code>
  </pre>

  <h4>The Test</h4>
  <pre>
    <code>
  require 'test_helper'

  module Dev
    class BootTest < MiniTest::Test
      def root
        File.expand_path('../../../', __FILE__)
      end

      def test_required_modules_on_boot
        # Record what is loaded when `dev` is loaded
        dev = "#{root}/bin/support/load_dev.rb"
        cmd = "RUBYLIB='' RUBYOPT='' PRINT_LOADED_FEATURES=1 "\
          "ruby --disable-gems -I#{root} -e \"require '#{dev}'\""
        required_files = `#{cmd}`.lines.map(&:chomp)

        # We expect these to be loaded
        expected_required_files = [
          # Ruby Libraries
          "enumerator.so",
          "thread.rb",
          "rational.so",
          "complex.so",
          "#{ENV['RUBY_ROOT']}/lib/ruby/2.3.0/#{RUBY_PLATFORM}/enc/encdb.bundle",
          "#{ENV['RUBY_ROOT']}/lib/ruby/2.3.0/#{RUBY_PLATFORM}/enc/trans/transdb.bundle",
          "#{ENV['RUBY_ROOT']}/lib/ruby/2.3.0/unicode_normalize.rb",
          "#{ENV['RUBY_ROOT']}/lib/ruby/2.3.0/#{RUBY_PLATFORM}/stringio.bundle",

          # Core Dev Files
          "#{root}/lib/support/ruby_backports.rb",
          "#{root}/lib/dev/register.rb",
          "#{root}/lib/dev/commands.rb",
          "#{root}/lib/dev.rb",
          "#{root}/lib/dev/util.rb",
          "#{root}/lib/dev/tool_conflicts.rb",
          "#{root}/lib/dev/helpers/mac_os.rb",
          "#{root}/vendor/lib/gem_version.rb",

          # CLI UI files (https://github.com/shopify/cli-ui)
          "#{root}/vendor/deps/cli-ui/lib/cli/ui/ansi.rb",
          "#{root}/vendor/deps/cli-ui/lib/cli/ui/color.rb",
          "#{root}/vendor/deps/cli-ui/lib/cli/ui/spinner.rb",
          "#{root}/vendor/deps/cli-ui/lib/cli/ui/spinner/spin_group.rb",
          "#{root}/vendor/deps/cli-ui/lib/cli/ui/stdout_router.rb",
          "#{root}/vendor/deps/cli-ui/lib/cli/ui.rb",
          "#{root}/vendor/deps/cli-ui/lib/cli/ui/frame.rb",

          # CLI Kit Files (https://github.com/shopify/cli-kit)
          "#{root}/vendor/deps/cli-kit/lib/cli/kit/ruby_backports/enumerable.rb",
          "#{root}/vendor/deps/cli-kit/lib/cli/kit/autocall.rb",
          "#{root}/vendor/deps/cli-kit/lib/cli/kit.rb",
          "#{root}/vendor/deps/cli-kit/lib/cli/kit/command_registry.rb",
        ]

        # Make sure everything that is expected to be loaded is loaded
        # This makes sure that our array is kept up to date (no stale entries)
        expected_required_files.each do |file|
          assert required_files.include?(file), "#{file} was expected to be required but wasn't.\n\t"\
            "All Required: #{required_files}"
        end

        # Make sure everything that is loaded is expected to be loaded
        # This makes sure that we don't increase the load path
        required_files.each do |file|
          assert expected_required_files.include?(file), "#{file} was required but shouldn't be"
        end
      end
    end
  end
    </code>
  </pre>
</div>